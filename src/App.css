/* Asegurar que el contenedor principal ocupe toda la altura */
.app-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

/* Contenedor para Sidebar y Contenido */
.main-layout {
  display: flex;
  flex-grow: 1; /* Ocupa el espacio restante vertical */
  /* La sidebar puede superponerse en móvil, ajustar según media query */
}

/* Estilo para el área de contenido */
.content-area {
  flex-grow: 1; /* Ocupa el espacio restante horizontal */
  padding: 20px; /* Añadir algo de padding */
  overflow-y: auto; /* Permitir scroll si el contenido es largo */
}

/* Estilos básicos para la sidebar (complementan los inline) */
.main-layout aside.sidebar {
  /* Los estilos base como background, color, height, etc., están inline */
  /* Asegurar que tenga transición */
  box-sizing: border-box; /* <<< Añadir box-sizing */
  transition: transform 0.3s ease, width 0.3s ease, padding 0.3s ease, border-right-width 0.3s ease; /* Añadir min-width a transition */
  overflow: hidden; /* Ocultar contenido que desborda durante la animación */
  white-space: nowrap; /* Evitar que el texto haga wrap durante la animación */
  padding: 20px; /* <<< Añadir padding base aquí */
  border-right-width: 1px; /* <<< Añadir ancho de borde base aquí */
  /* Estilos base que estaban inline */
  width: 250px; 
  background: #353535; 
  height: calc(100vh - 57px); /* Ajustar si altura header cambia */
  border-right: 1px solid #444; 
  color: rgba(255, 255, 255, 0.8);
  flex-shrink: 0; 
}

/* Estado cerrado: se reduce el ancho y el padding */
.main-layout aside.sidebar.closed {
  width: 0;
  min-width: 0; /* <<< Añadir min-width 0 */
  padding-left: 0;
  padding-right: 0;
  padding-top: 0;
  padding-bottom: 0;
  border-right-width: 0;
  /* Ocultar con transform en móvil */
}

/* Estado abierto (explícito para padding y borde si se animan) */
.main-layout aside.sidebar.open {
  /* Width ya está en inline style */
  min-width: 250px; /* <<< Opcional: asegurar min-width cuando está abierto */
  padding: 20px; /* Asegurar padding cuando está abierto */
  border-right-width: 1px; /* Asegurar borde cuando está abierto */
}

/* Limpieza de estilos por defecto de listas en la sidebar */
.main-layout aside ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.main-layout aside li {
  margin-bottom: 10px;
}

.main-layout aside a {
  text-decoration: none;
  color: #D7B615;
}

.main-layout aside a:hover {
  color: #007bff;
}

/* === LAYOUTS DE CONTENIDO (ClassDetail, Streaming) === */
.page-layout-columns, .streaming-layout {
  display: flex;
  gap: 20px; 
}
.left-column { flex: 3; min-width: 0; max-width: 900px; }
.right-column { flex: 1; min-width: 0; }
.streaming-main { flex: 3; min-width: 0; display: flex; flex-direction: column; }
.streaming-playlist { flex: 1; min-width: 0; display: flex; /* Para que Playlist tome altura */ }

/* === GRIDS DE CONTENIDO (HomePage Clases) === */
.collection-grid {
    display: flex; 
    flex-wrap: wrap; 
    margin-bottom: 30px; 
    gap: 15px; /* Añadir gap para espaciado */
}

/* === MEDIA QUERIES PARA RESPONSIVE === */
@media (max-width: 768px) {
  /* Reducir tamaño de fuente base para mejor densidad */
  html { 
    font-size: 90%; /* O ajustar :root { font-size: ... } */
  }

  .main-layout aside.sidebar {
    position: fixed; /* Cambiar a fixed para overlay */
    left: 0;
    top: 0; /* O ajustar a altura del header si no se oculta */
    height: 100%; /* Ocupar toda la altura */
    z-index: 1000; /* Asegurar que esté por encima */
    transform: translateX(-100%); /* Oculta fuera de pantalla */
    transition: transform 0.3s ease; /* Animar solo transform */
    border-right: 1px solid #555; /* Borde más visible quizás */
    /* Quitar width/min-width/padding de la transition base */
    /* El width siempre será 250px, solo controlamos visibilidad con transform */
  }
  .main-layout aside.sidebar.open {
    transform: translateX(0); /* Mostrar en pantalla */
    /* Anular min-width si aplica */
    min-width: initial; 
    /* Asegurar padding/border */
    padding: 20px;
    border-right-width: 1px;
  }
  .main-layout aside.sidebar.closed {
      /* No necesita width/padding 0, solo transform */
      transform: translateX(-100%);
      /* Asegurar que no tenga borde visible al estar cerrado */
      border-right-width: 0;
      padding: 0;
  }

  /* Hacer que el content-area ocupe todo y ajustar padding */
  .content-area {
    padding: 10px; /* <<< Reducir padding general */
    /* Añadir un poco de padding inferior extra */
    padding-bottom: 60px; 
  }

  /* Apilar columnas */
  .page-layout-columns, .streaming-layout {
    flex-direction: column;
  }
  
  /* Ajustar ancho máximo en móvil si es necesario */
  .left-column {
    max-width: 100%; 
  }

  /* Ajustar grid de colecciones */
  .collection-grid {
    justify-content: center; /* Centrar items */
  }

  /* Ajustar header padding */
  header { 
      padding: 8px 15px; /* <<< Reducir padding */
  }
  
  /* Ajustar tamaño de botones generales */
  button {
      padding: 0.5em 1em; /* Un poco más pequeños */
      font-size: 0.9em;
  }
  
  /* Ajustar títulos principales de página/sección */
  h1 {
      font-size: 2em; /* Reducir H1 */
  }
  h2 {
      font-size: 1.5em;
  }
  h3 {
      font-size: 1.2em;
      margin-bottom: 10px;
  }

  /* === Optimizaciones Tarjetas === */
  
  /* PostCard y otras tarjetas similares */
  .feed .post-card, /* Asumiendo que PostCard tiene (o le añadimos) la clase post-card */
  .content-area .video-item-wrapper, /* Para galerías si se usa ese wrapper */
  .comments-list .comment-item /* Podríamos aplicar a comentarios también */
  {
     padding: 10px; /* Menos padding interno */
  }

  .feed .post-card .post-header,
  .comments-list .comment-item .comment-header /* Ejemplo si se usa */
  {
      /* Reducir tamaño avatar y margen */
      .avatar { /* Si se usa clase .avatar */
          width: 35px;
          height: 35px;
          margin-right: 8px;
      }
      /* Ajustar tamaño fuente nombre/info */
      .author-name { font-size: 0.9em; }
      .author-info { font-size: 0.8em; }
  }

  /* ClassCard (la que tiene thumbnail + contenido) */
  .class-card {
      flex-direction: column; /* Apilar imagen y contenido */
  }
  .class-card .thumbnail-container {
      width: 100%; /* Imagen ocupa todo el ancho */
      /* Ajustar aspect ratio si es necesario para móvil */
      /* padding-top: 56.25%; */
  }
  .class-card .class-content {
      padding: 10px; /* Ajustar padding contenido */
  }
  .class-card .class-title { font-size: 1em; }
  .class-card .class-duration { font-size: 0.8em; }
  .class-card .progress-text { font-size: 0.75em; }
  .class-card .download-icon { font-size: 1em; padding: 4px; }
}

/* <<< Media Query Adicional para pantallas MUY pequeñas (opcional) >>> */
@media (max-width: 480px) {
    html {
        font-size: 85%;
    }
    .content-area {
        padding: 8px;
        padding-bottom: 50px;
    }
    button {
      padding: 0.4em 0.8em; 
      font-size: 0.85em;
    }
    /* Ajustes más específicos si son necesarios */
}

/* === OTROS ESTILOS BASE (botones, etc de index.css pueden moverse aquí) === */
